# services définit les services à lancer
# db: service de base de données MySQL
# app: service de l'application Spring Boot
# volumes: définit les volumes à monter
# networks: définit les réseaux à utiliser
services: 
  db:
    image: mysql:8.0
    container_name: chatop-mysql
    restart: always
    environment:
      MYSQL_DATABASE: chatop
      MYSQL_USER: chatopuser
      MYSQL_PASSWORD: chatoppass
      MYSQL_ROOT_PASSWORD: rootpass
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql # Montage du volume mysql_data dans /var/lib/mysql
      - ./src/main/docker/init:/docker-entrypoint-initdb.d/ # Montage du répertoire init dans /docker-entrypoint-initdb.d/
    networks:
      - chatop-network # Utilisation du réseau chatop-network pour le service db
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      retries: 5
      start_period: 20s

  app:
    build:
      context: .  # Utilise le Dockerfile situé à la racine
      dockerfile: Dockerfile
    container_name: chatop-app
    depends_on:
      db:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/chatop?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: chatopuser
      SPRING_DATASOURCE_PASSWORD: chatoppass
    ports:
      - "3001:3001"
    networks:
      - chatop-network

volumes:
  mysql_data:

networks:
  chatop-network:
    driver: bridge
